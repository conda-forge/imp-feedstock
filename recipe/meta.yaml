{% set version = "2.20.1" %}

package:
  name: imp
  version: {{ version }}

source:
  fn: imp-{{ version }}.tar.gz
  url: https://github.com/salilab/imp/releases/download/{{ version }}/imp-src-{{ version }}.tar.gz
  sha256: 9cf1173f3c2eba3ae65d0f62a6ecf35d8ccbea64988de5818bbafa69ef125186
  patches:
    - imp-directories.patch  # [win]
    - imp-abseil-windows.patch  # [win]

build:
  number: 3
  detect_binary_files_with_prefix: True  # [not win]

requirements:
  build:
    - python                                 # [build_platform != target_platform]
    - cross-python_{{ target_platform }}     # [build_platform != target_platform]
    - numpy                                  # [build_platform != target_platform]
    - libprotobuf                            # [build_platform != target_platform]
    - protobuf                               # [build_platform != target_platform]
    - {{ compiler('c') }}
    - {{ compiler('cxx') }}
    - llvm-openmp  # [osx]
    - libgomp      # [linux]
    - pkg-config   # [not win]
    - swig
    - cmake
    - ninja
  host:
    - python
    - numpy
    - rmf >=1.6
    - ihm
    - libboost-devel
    - hdf5
    # We need both the libprotobuf library and the Python wrappers
    - libprotobuf
    - protobuf
    # We only need the library; we don't use the OpenCV Python wrappers
    - libopencv
    - eigen
    - cereal
    - fftw
    - gsl
    - libcblas
    - cgal-cpp
    # CGAL code pulls in mpfr and gmp (on Linux/Mac) or mpir (on Windows)
    - gmp   # [not win]
    - mpir  # [win]
    - mpfr
    - mpich  # [not win]
    - msmpi  # [win]

  run:
    - python
    - {{ pin_compatible('numpy') }}
    # RMF does not pin its exports, but we link against the C++ DSO
    - {{ pin_compatible('rmf', max_pin='x.x') }}
    - ihm
    - protobuf
    - msmpi  # [win]

test:
  # Need Eigen to test IMPConfig.cmake
  requires:
    - eigen
  # Python imports
  imports:
    - IMP
    - IMP.atom
    - IMP.cgal
    - IMP.em2d
    - IMP.npc
    - IMP.npctransport
    - IMP.bayesianem
    - IMP.sampcon
    - IMP.rmf
    - IMP.mpi
    - IMP.spb
    - RMF
  # Command line tools
  commands:
    - foxs --help
    - spb_test_score --help
    - imp_sampcon --help
    - multifit --help

about:
  home: https://integrativemodeling.org
  license: GPL-3.0-or-later
  license_file:
    - COPYING.LGPL
    - COPYING.GPL
  summary: "The Integrative Modeling Platform"
  description: >
    IMP's broad goal is to contribute to a comprehensive structural
    characterization of biomolecules ranging in size and complexity from small
    peptides to large macromolecular assemblies, by integrating data from
    diverse biochemical and biophysical experiments. IMP provides an open
    source C++ and Python toolbox for solving complex modeling problems, and a
    number of applications for tackling some common problems in a user-friendly
    way. IMP can also be used from the
    [Chimera](https://www.cgl.ucsf.edu/chimera/) molecular modeling system,
    or via one of several web applications.

    See [the IMP website](https://integrativemodeling.org/) for more details.
  doc_url: https://integrativemodeling.org/doc.html
  dev_url: https://github.com/salilab/imp/

extra:
  recipe-maintainers:
    - benmwebb
